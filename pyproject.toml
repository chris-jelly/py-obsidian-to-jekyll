[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "py-obsidian-to-jekyll"
version = "0.1.0"
description = "Convert Obsidian notes to Jekyll blog posts"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "Chris Jelly", email = "chris@example.com"},
]
keywords = ["obsidian", "jekyll", "blog", "markdown", "publishing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Text Processing :: Markup :: Markdown",
    "Topic :: Software Development :: Build Tools",
]
dependencies = [
    "PyYAML>=6.0",
    "click>=8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]

[project.scripts]
blog-publish = "blog_publisher.cli:main"

[project.urls]
Homepage = "https://github.com/chris-jelly/py-obsidian-to-jekyll"
Repository = "https://github.com/chris-jelly/py-obsidian-to-jekyll"
Issues = "https://github.com/chris-jelly/py-obsidian-to-jekyll/issues"

[tool.hatch.version]
path = "src/blog_publisher/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/blog_publisher"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = ["-v", "--tb=short"]

[tool.coverage.run]
source = ["src/blog_publisher"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.black]
line-length = 88
target-version = ["py311"]

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
]
